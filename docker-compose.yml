version: "3.8"

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: onservice
    ports:
      - "8080:8080"
    environment:
      spring.kafka.bootstrap-servers: kafka:9092
      spring.kafka.consumer.enable-auto-commit: "false"
      spring.mail.host: host.docker.internal
    env_file:
      - docker.env
    depends_on:
      - postgres
      - kafka
      - mailhog

  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: notifications
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/scripts/CreateDBNotifications.sql:/docker-entrypoint-initdb.d/1.sql
      - ./src/main/resources/scripts/PopulateTestNotifications.sql:/docker-entrypoint-initdb.d/2.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USERNAME} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,BROKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,BROKER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,BROKER://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181	
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  postgres-data: